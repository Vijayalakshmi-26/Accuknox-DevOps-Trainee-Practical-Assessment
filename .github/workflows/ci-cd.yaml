name: CI/CD Pipeline for Wisecow App (K8s & TLS)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # --- UPDATED WITH YOUR USERNAME ---
  DOCKER_USERNAME: vijayalakshmi26 
  DOCKER_IMAGE: vijayalakshmi26/wisecow
  DOCKER_TAG: ${{ github.sha }}
  # ---------------------------------
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # --- 1. CI: Checkout Code ---
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v3

      # --- 2. CI: Setup Docker Buildx ---
      - name: ‚öôÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # --- 3. CI: Docker Login ---
      - name: üîë Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }} # Uses the username variable
          password: ${{ secrets.DOCKER_PASSWORD }}

      # --- 4. CI: Build and Push Docker Image ---
      - name: üî® Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_IMAGE }}:latest

      # --- 5. CD: Install Minikube/Kubectl ---
      - name: üì¶ Install K8s Tools (Minikube & Kubectl)
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # --- 6. CD: Start Minikube (FIXES VALIDATION ERROR) ---
      - name: üöÄ Start Minikube and Wait for API Server Readiness
        run: |
          minikube start --driver=docker
          
          echo "Waiting for Kubernetes API Server to be ready..."
          kubectl wait --for=condition=Ready node/minikube --timeout=5m
          sleep 5s
          
          # Enable ingress (required for wisecow.local and port 443)
          minikube addons enable ingress

      # --- 7. CD: Load Image into Minikube ---
      - name: üñºÔ∏è Load Image into Minikube
        run: |
          minikube image load ${{ env.DOCKER_IMAGE }}:latest
          
      # --- 8. CD: Install Cert-Manager (TLS Prerequisite) ---
      - name: üîë Install Cert-Manager
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml
          
          # Wait for cert-manager deployments to become ready
          kubectl wait --for=condition=Available deployment -n cert-manager --all --timeout=5m

      # --- 9. CD: Deploy Application and TLS Resources ---
      - name: üö¢ Deploy App, Service, Ingress, and TLS
        run: |
          # Make sure your k8s folder contains deployment.yaml, service.yaml, ingress.yaml, 
          # issuer.yaml, and certificate.yaml
          kubectl apply -f k8s/
          
      # --- 10. Verification (Optional but Recommended) ---
      - name: ‚úÖ Verify Deployment and Certificate
        run: |
          kubectl get pods
          kubectl get ing
          kubectl get certificate
          
          INGRESS_IP=$(minikube ip)
          echo "Testing secure connection via Ingress..."
          curl -k --resolve wisecow.local:443:$INGRESS_IP https://wisecow.local
